# ~/.bashrc: executed by bash for non-login shells.

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# Set vi mode
#set -o vi
#bind -m vi-command 'Control-l: clear-screen'
#bind -m vi-insert 'Control-l: clear-screen'
# NOTE set in .inputrc

# Change to named directory
shopt -s autocd 
shopt -s cdspell # autocorrects cd misspellings
shopt -s cmdhist # save multi-line commands in history as single line
shopt -s dotglob
shopt -s histappend # do not overwrite history
shopt -s expand_aliases # expand aliases
shopt -s checkwinsize # checks term size when bash regains control

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'
    # Colorize grep output (good for log files)
    alias g="grep -i --color=auto"
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Paths
export PATH="$PATH:$HOME/.local/bin"
export PATH="$PATH:/opt/nvim-linux64/bin"

# Editor
export EDITOR="nvim" # in terminal
export VISUAL="nvim" # GUI mode

# Manpage most readable
export MANPAGER="nvim -c 'set ft=man' -" # set neovim as manpager

# Set bat alias
if [ -x /usr/bin/batcat ]; then
    alias bat='batcat'
    # Manpage most readable
    export BAT_PAGER="less"
    export MANPAGER="sh -c 'col -bx | batcat -l man -p'" # set bat as manpager
fi

# Alias
alias lrc='exec bash'
alias c="clear"
alias e="$EDITOR"
alias se="sudo $EDITOR"

alias l='ls --group-directories-first -hlACF'
alias ll='ls --group-directories-first -hlF'
alias la='ls --group-directories-first -haF'

# Changing "ls" to "exa"
if [ -x /usr/bin/exa ]; then
    alias l="exa -al --color=always --group-directories-first" # my preferred listing
    alias li="exa -ahl --color=always --group-directories-first --icons"
    alias lg="exa -ahl --color=always --group-directories-first --git"
    alias ls="exa --color=always --group-directories-first --icons"
    alias la="exa -a --color=always --group-directories-first --icons" # all files and dirs
    alias ll="exa -l --color=always --group-directories-first" # long format
    alias lt="exa -aT --color=always --group-directories-first" # tree listing
    alias l.="exa -a | egrep \"^\.\""
fi

# navigation
alias ..="cd .."
alias ...="cd ../.."
alias .3="cd ../../.."
alias .4="cd ../../../.."
alias .5="cd ../../../../.."

# confirm before overwriting something
alias cp="cp -i"
alias mv="mv -i"
alias rm="rm -i"

# adding flags
alias df="df -h"        # human-readable sizes
alias free="free -m"    # show sizes in MB

# get top process eating memory
alias psmem="ps auxf | sort -nr -k 4"
alias psmem10="ps auxf | sort -nr -k 4 | head -10"

# get top process eating cpu ##
alias pscpu="ps auxf | sort -nr -k 3"
alias pscpu10="ps auxf | sort -nr -k 3 | head -10"

# merge .Xresources
alias xmerge="xrdb -merge ~/.Xresources"

# git
alias gaddup="git add -u"
alias gaddall="git add ."
alias gadd="git add"
alias gbranch="git branch"
alias gcheckout="git checkout"
alias gclone="git clone"
alias gcommit="git commit -m"
alias gfetch="git fetch"
alias gpull="git pull"
alias gpush="git push origin"
alias gpushmain="git push origin main"
alias gstatus="git status"
alias gdiff="git diff"
alias gtag="git tag"
alias gnewtag="git tag -a"

# get error messages from journalctl
alias jctl="journalctl -p 3 -xb"

# switch between shells
alias tobash="sudo chsh $USER -s /bin/bash && echo \"Need log out.\""
alias tozsh="sudo chsh $USER -s /bin/zsh && echo \"Need log out.\""
alias tofish="sudo chsh $USER -s /bin/fish && echo \"Need log out.\""

# Load loca aliases from ~/.bash_aliases.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

eval "$(starship init bash)"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
